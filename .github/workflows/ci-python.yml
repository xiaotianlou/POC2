name: ci-python

on:
  push:
    branches: main           # 任意分支 push 都跑，PR 分支也能自测

  pull_request:
    branches: main           # 任意目标分支的 PR 都跑
  workflow_dispatch: {}         # 手动触发（调试很方便）

permissions:
  contents: read
defaults:
  run:
    shell: bash

jobs:
  ruff:
    name: Ruff (lint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install deps
        run: |
          set -eux
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install ruff
      - name: Run ruff
        run: ruff check . --output-format=github

  pylint:
    name: Pylint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install deps
        run: |
          set -eux
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pylint
      - name: Run pylint
        continue-on-error: true
        run: |
          set -e
          FILES="$(git ls-files '*.py' || true)"
          if [ -n "$FILES" ]; then
            echo "$FILES" | xargs -r pylint
          else
            echo "No Python files to lint. Skipping."
          fi

  unittest:
    name: "🧪 Unit tests · ${{ matrix.os }} · Python ${{ matrix.python-version }}"
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
    runs-on: ${{ matrix.os }}
  
    steps:
      - uses: actions/checkout@v4
  
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
  
      - name: Install deps
        run: |
          set -eux
          REQ=$(ls -1 requirements*.txt 2>/dev/null | head -n1 || true)
          if [ -n "$REQ" ]; then pip install -r "$REQ"; fi
          pip install -U pip pytest pytest-cov
          if [ -f pyproject.toml ] || [ -f setup.cfg ] || [ -f setup.py ]; then
            pip install -e .
          fi
  
      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}/src:${{ github.workspace }}
        run: |
          set -eux
          if [ -d tests ] || [ -d test ]; then
            COV="."
            [ -d src ] && COV="src"
            pytest -q --maxfail=1 --disable-warnings \
                   --cov="$COV" --cov-report=term-missing
          else
            echo "No tests directory found. Skipping."
          fi
